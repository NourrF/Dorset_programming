Hello+name:

#include <iostream>
#include <string>
using namespace std; 
int main(){
    string name; 
    cin>> name;
    cout<<"Hello "<<name<<" !";
    return 0;
}

1. Write a C++ program to perform various arithmetic operations, including addition, subtraction, multiplication, and division. The program should take two numbers as input from the user using the keyboard and display the result of each operation:


#include <iostream>
using namespace std;

// Addition
void addition(double a, double b) {
    cout << "Addition: " << (a + b) << endl;
}

// Subtraction
void subtraction(double a, double b) {
    cout << "Subtraction: " << (a - b) << endl;
}

// Multiplication
void multiplication(double a, double b) {
    cout << "Multiplication: " << (a * b) << endl;
}

// Division
void division(double a, double b) {
    if (b != 0) {
        cout << "Division: " << (a / b) << endl;
    } else {
        cout << "Division:" << endl;
    }
}

int main() {
    double num1, num2;
    
    // Ask user for two numbers
    cout << "Enter first number: ";
    cin >> num1;
    cout << "Enter second number: ";
    cin >> num2;
    
    // Perform and display separate operations
    addition(num1, num2);
    subtraction(num1, num2);
    multiplication(num1, num2);
    division(num1, num2);

 return 0;
}


2. Write a C++ program to demonstrate the use of arithmetic, relational,logical, bitwise, and assignment operators. The program should take input from the user and display the results of different operations.


#include <iostream>
using namespace std;

int main() {
    int a, b;

    // User input
    cout << "Enter two numbers: ";
    cin >> a >> b;

    // Relational Operators
    cout << "\nRelational Operators:" << endl;
    cout << "a == b: " << (a == b) << endl;
    cout << "a != b: " << (a != b) << endl;
    cout << "a > b: " << (a > b) << endl;
    cout << "a < b: " << (a < b) << endl;
    cout << "a >= b: " << (a >= b) << endl;
    cout << "a <= b: " << (a <= b) << endl;

    // Logical Operators
    cout << "\nLogical Operators:" << endl;
    cout << "(a > 0 && b > 0): " << ((a > 0) && (b > 0)) << endl;
    cout << "(a > 0 || b > 0): " << ((a > 0) || (b > 0)) << endl;
    cout << "!(a > 0): " << !(a > 0) << endl;

    // Bitwise Operators
    cout << "\nBitwise Operators:" << endl;
    cout << "a & b: " << (a & b) << endl;
    cout << "a | b: " << (a | b) << endl;
    cout << "a ^ b: " << (a ^ b) << endl;
    cout << "~a: " << (~a) << endl;
    cout << "a << 1: " << (a << 1) << endl;
    cout << "a >> 1: " << (a >> 1) << endl;

    // Assignment Operators
    cout << "\nAssignment Operators:" << endl;
    int x = a;
    cout << "x = a: " << x << endl;
    x += b;
    cout << "x += b: " << x << endl;
    x -= b;
    cout << "x -= b: " << x << endl;
    x *= b;
    cout << "x *= b: " << x << endl;
    if (b != 0) {
        x /= b;
        cout << "x /= b: " << x << endl;
    }

    return 0;
}


3. Write a C++ program that takes a day of the week as input (e.g., "Monday", "Tuesday", etc.) and determines whether it is a working day or a weekend (off day). Assume that Saturday and Sunday are off days, while the rest are working days.

#include <iostream>
#include <string>
using namespace std;

int main() {
    string day;
    
    cout << "Enter the day of the week: ";
    cin >> day;

    if (day == "Saturday" || day == "Sunday") {
        cout << day << " is an off day!" << endl;
    } else {
        cout << day << " is a working day!" << endl;
    }

    return 0;
}


4. Write a C++ program that asks the user to enter a day of the week (1-7), where 1 represents Monday and 7 represents Sunday. The program should use a switch statement to determine whether the entered day is a working day or a week off and display the appropriate message.


#include <iostream>
using namespace std;

int main() {
    int dayNumber;

   
    cout << "Enter a day number (1 for Monday, 7 for Sunday): ";
    cin >> dayNumber;
    
    switch (dayNumber) {
        case 6:
        case 7:
            cout << "It's a weekend (off day)." << endl;
            break;
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            cout << "It's a Working Day." << endl;
            break;
        default:
            cout << "Invalid input! Please enter a number between 1 and 7." << endl;
    }

    return 0;
}


5. Write a C++ program that asks the user to enter a number and then displays all the numbers from 1 to that number using a loop. The program should use different types of loops (i.e., while, do-while, and for) to print the numbers.

#include <iostream>
using namespace std;

int main() {
    int num;
    
    // Asking the user for a number
    cout << "Enter a number: ";
    cin >> num;

    // Using while loop
    cout << "\nUsing while loop:" << endl;
    int i = 1;
    while (i <= num) {
        cout << i << " ";
        i++;
    }
    cout << endl;

    // Using do-while loop
    cout << "\nUsing do-while loop:" << endl;
    i = 1;
    do {
        cout << i << " ";
        i++;
    } while (i <= num);
    cout << endl;

    // Using for loop
    cout << "\nUsing for loop:" << endl;
    for (int j = 1; j <= num; j++) {
        cout << j << " ";
    }
    cout << endl;
    
    return 0;
}



